# The proguard configuration file for the following section is C:\Users\tw\Desktop\PDA_DEV\source\H_able_Client\build\intermediates\proguard-files\proguard-android-optimize.txt-4.1.3
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
# Adding optimization introduces certain risks, since for example not all optimizations performed by
# ProGuard works on all versions of Dalvik.  The following flags turn off various optimizations
# known to have issues, but the list may not be complete or up to date. (The "arithmetic"
# optimization can be used if you are only targeting Android 2.0 or later.)  Make sure you test
# thoroughly if you go this route.
-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*
-optimizationpasses 5
-allowaccessmodification

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

# Preserve some attributes that may be required for reflection.
-keepattributes *Annotation*,Signature,InnerClasses,EnclosingMethod

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# This class is deprecated, but remains for backward compatibility.
-dontwarn android.util.FloatMath

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep
-keep class androidx.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from C:\Users\tw\Desktop\PDA_DEV\source\H_able_Client\build\intermediates\proguard-files\proguard-android-optimize.txt-4.1.3
# The proguard configuration file for the following section is C:\Users\tw\Desktop\PDA_DEV\source\H_able_Client\morpheus_proguard-project.txt
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html

# Optimization is turned off by default. Dex does not like code run
# through the ProGuard optimize and preverify steps (and performs some
# of these optimizations on its own).
-dontoptimize
-dontpreverify
-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

#To repackage classes on a single package
#-repackageclasses ''

#Uncomment if using annotations to keep them / generic type.
-keepattributes *Annotation*, EnclosingMethod, Signature

#안드로이드 support / apache / json 난독화를 진행하지 않는다.(모든 내용)
-keep class android.support.v4.** { *; }   
-keep class com.google.** { *; }
-keep class org.apache.** { *; }
-keep class org.json.** { *; }
-keep class net.sourceforge.** { *; }

#상기 선언된 내용에 대한 진행 중 발생하는 문제에 대해 경고하지 않는다.
-dontwarn android.support.v4.**
-dontwarn com.google.**
-dontwarn org.apache.**
-dontwarn m.client.android.library.core.**
-dontwarn m.client.library.addon.netext.WNInterfaceNetExt

#Keep classes that are referenced on the AndroidManifest
-keep public class * extends android.app.Activity
-keep public class * extends android.app.Application
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider
-keep public class * extends android.app.backup.BackupAgentHelper
-keep public class * extends android.preference.Preference
-keep public class * extends android.support.v4.app.Fragment

#라이센스 관련 정보가 들어가 있을때는 아래의 주석을 제거한다.
-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService

#To maintain custom components names that are used on layouts XML.
#Uncomment if having any problem with the approach below
#-keep public class custom.components.package.and.name.**

# keep setters in Views so that animations can still work.
# see http://proguard.sourceforge.net/manual/examples.html#beans
 -keepclassmembers public class * extends android.view.View {
  void set*(***);
  *** get*();
}

#To remove debug logs:
-assumenosideeffects class android.util.Log {
    public static *** d(...);
    public static *** v(...);
    public static *** w(...);
    public static *** e(...);
}
-assumenosideeffects class m.client.push.library.common.PushLog {
    public static *** d(...);
    public static *** v(...);
    public static *** w(...);
    public static *** e(...);
}

#To avoid changing names of methods invoked on layout's onClick.
# Uncomment and add specific method names if using onClick on layouts
#-keepclassmembers class * {
# public void onClickButton(android.view.View);
#}

#Maintain java native methods
-keepclasseswithmembernames class * {
    native <methods>;
}

#keep android class using context
-keepclassmembers class * extends android.content.Context {
   public void *(android.view.View);
   public void *(android.view.MenuItem);
}

#To maintain custom components names that are used on layouts XML:
-keep public class * extends android.view.View {
    public <init>(android.content.Context);
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>(android.content.Context, android.util.AttributeSet, int);
    public void set*(...);
}

#Maintain enums
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

#To keep parcelable classes (to serialize - deserialize objects to sent through Intents)
-keep class * implements android.os.Parcelable {
  public static final android.os.Parcelable$Creator *;
}

#Keep the R
-keepclassmembers class **.R$* {
    public static <fields>;
}

###### ADDITIONAL OPTIONS NOT USED NORMALLY

#To keep callback calls. Uncomment if using any
#http://proguard.sourceforge.net/index.html#/manual/examples.html#callback
#-keep class mypackage.MyCallbackClass {
#   void myCallbackMethod(java.lang.String);
#}

#Uncomment if using Serializable
-keepclassmembers class * implements java.io.Serializable {
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

#dynamic class loading에 관련된 클래스 들은 난독화를 진행하지 않는다.
-keep public class m.client.android.library.core.managers.WNInterfaceManager
-keep public class m.client.android.library.core.utils.ClassManager
-keep public class m.client.android.library.core.bridge.InterfaceJavascript

#callback 함수들을 사용하는 클래스들은 난독화를 진행하지 않는다.
-keep public class * extends m.client.android.library.core.networks.http.AsyncHttpNetwork {
	public protected *;
}

-keep public class * extends m.client.android.library.core.networks.socket.AsyncSocketNetwork {
	public protected *;
}

#native <-> script interface 함수들은 난독화 하지 않는다.
-keep public class * extends m.client.android.library.core.control.AbstractInterface {
	public protected *;
}

#상기 선언된 내용에 대한 진행 중 발생하는 문제에 대해 경고하지 않는다.
-dontwarn m.client.push.library.service.*
-dontwarn mpush.eclipse.paho.client.mqttv3.internal.ssl.SecureSocketSslContextFactory

-keep public class android.net.http.SslError
-keep public class android.webkit.WebViewClient

-dontwarn android.webkit.WebView
-dontwarn android.net.http.SslError
-dontwarn android.webkit.WebViewClient


########################################
# FIDO - start
########################################


-keep class android.hardware.fingerprint.** { *; }
-dontwarn android.hardware.fingerprint.**

-keep class com.hyundai.lib_fingerauth.** { *; }
-dontwarn com.hyundai.lib_fingerauth.**

-keep class com.samsung.android.sdk.pass.** { *; }
-keep class com.dreamsecurity.jcaos.** { *; }

-dontwarn com.samsung.android.sdk.pass.**
-dontwarn com.dreamsecurity.jcaos.**

########################################
# FIDO - end
########################################

-dontwarn io.netty.util.**


# End of content from C:\Users\tw\Desktop\PDA_DEV\source\H_able_Client\morpheus_proguard-project.txt
# The proguard configuration file for the following section is C:\Users\tw\Desktop\PDA_DEV\source\H_able_Client\build\intermediates\aapt_proguard_file\release\aapt_rules.txt
-keep class android.support.v4.content.FileProvider { <init>(); }
-keep class com.google.zxing.client.android.CaptureActivity { <init>(); }
-keep class com.hts.hable_pos.BLTPrint { <init>(); }
-keep class com.hts.hable_pos.BaseActivity { <init>(); }
-keep class com.hts.hable_pos.HTMLPrint { <init>(); }
-keep class com.hts.hable_pos.Startup { <init>(); }
-keep class com.hts.hable_pos.implementation.ExtendApplication { <init>(); }
-keep class com.hts.hable_pos.samples.activity.BatchTempActivity { <init>(); }
-keep class com.hts.hable_pos.samples.activity.ImageDetailsActivity { <init>(); }
-keep class com.hts.hable_pos.samples.activity.ImageList1Activity { <init>(); }
-keep class com.hts.hable_pos.samples.activity.ImageList2Activity { <init>(); }
-keep class com.hts.hable_pos.samples.activity.SampleActivity { <init>(); }
-keep class com.hts.hable_pos.samples.activity.SampleActivity2 { <init>(); }
-keep class com.hts.hable_pos.samples.activity.SampleNativeListActivity { <init>(); }
-keep class com.hts.hable_pos.samples.activity.SampleNativeMapActivity { <init>(); }
-keep class com.hts.hable_pos.samples.activity.ShowPushPopup { <init>(); }
-keep class com.hts.hable_pos.samples.activity.StartActivity { <init>(); }
-keep class m.client.android.library.core.managers.LocalFileContentProvider { <init>(); }
-keep class m.client.android.library.core.view.MainActivity { <init>(); }
-keep class m.client.library.addon.media.AudioRecoderActivity { <init>(); }
-keep class m.client.library.addon.media.MediaPlayActivity { <init>(); }
-keep class m.client.library.addon.media.crop.CropImageActivity { <init>(); }
-keep class m.client.library.plugin.viewer.DocViewerActivity { <init>(); }
-keep class m.client.library.plugin.viewer.MuPDFActivity { <init>(); }
-keep class com.google.android.maps.MapView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class m.client.android.library.core.view.SquareImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class m.client.android.library.core.view.TouchImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class m.client.library.addon.media.CustomVideoView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class m.client.library.addon.media.crop.CropImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class m.client.library.addon.popup.DatePicker { <init>(android.content.Context, android.util.AttributeSet); }

-keep class m.client.library.addon.popup.NumberPicker { <init>(android.content.Context, android.util.AttributeSet); }

-keep class m.client.library.addon.popup.NumberPickerButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class m.client.library.plugin.qr.view.ClipView { <init>(android.content.Context, android.util.AttributeSet); }

-keepclassmembers class * { *** onClickButtonPaired(android.view.View); }

-keepclassmembers class * { *** onClickButtonSend(android.view.View); }


# End of content from C:\Users\tw\Desktop\PDA_DEV\source\H_able_Client\build\intermediates\aapt_proguard_file\release\aapt_rules.txt
# The proguard configuration file for the following section is <unknown>
-ignorewarnings
# End of content from <unknown>